{
    "openapi": "3.1.0",
    "x-stoplight": {
        "id": "julcu0w36bhhx"
    },
    "info": {
        "title": "settings",
        "version": "1.0",
        "summary": "Official Manage API",
        "contact": {
            "name": "Manage Team",
            "email": "api@manage.izt.app"
        },
        "description": ""
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "definitions": {
        "dayOfWeekHours": {
            "type": "object",
            "description": "The business hours for a day of the week.",
            "properties": {
                "startTime": {
                    "type": "string",
                    "description": "The start time of the business hours in the format HH:MM."
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the business hours in the format HH:MM."
                }
            }
        }
    },
    "paths": {
        "/settings/udfs": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "Example 1": {
                                            "status": true,
                                            "data": [
                                                {
                                                    "id": "62c4fceba36e541d722ffc83"
                                                },
                                                {
                                                    "id": "62ca347370eb5c6c3119b813"
                                                }
                                            ],
                                            "count": 2
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-udfs",
                "description": "Access UDFs",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "parameters": [],
                "tags": [
                    "udfs"
                ]
            },
            "post": {
                "summary": "Create",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "19v53k3sgtcco"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UDF",
                                            "x-stoplight": {
                                                "id": "s5wyzlqkbopdw"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "post-settings-udfs",
                "description": "Create a UDF",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UDFInput"
                            }
                        }
                    }
                },
                "tags": [
                    "udfs"
                ]
            },
            "parameters": []
        },
        "/settings/users": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "Example 1": {
                                            "status": true,
                                            "data": [
                                                {
                                                    "id": "62c4fceba36e541d722ffc83"
                                                },
                                                {
                                                    "id": "62ca347370eb5c6c3119b813"
                                                }
                                            ],
                                            "count": 2
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-users",
                "description": "Access roles",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "parameters": [],
                "tags": [
                    "users"
                ]
            },
            "post": {
                "summary": "Create",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "r5geonsbcdjiv"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User",
                                            "x-stoplight": {
                                                "id": "1gvncsnfxbop8"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Create a role",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "operationId": "post-settings-users",
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/settings/automation/email/domains": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "x-stoplight": {
                                                "id": "52wf5n9fd5b5f"
                                            }
                                        },
                                        "data": {
                                            "type": "string",
                                            "x-stoplight": {
                                                "id": "0h5bo5ugq4cx5"
                                            }
                                        },
                                        "count": {
                                            "type": "string",
                                            "x-stoplight": {
                                                "id": "bs1df7ar3ek9k"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "brlxwutdrsv77"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "jdt7lfdkar234"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "a3obfsq9jwpf0"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "pxm6fl5y9p41h"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "2erxsrx4ax9jw"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-domains",
                "tags": [
                    "automation.email.domains"
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-domains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "xdglobltaebz0"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Domain",
                                            "x-stoplight": {
                                                "id": "y05n647lm3kiy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.email.domains"
                ]
            },
            "parameters": []
        },
        "/settings/automation/email/parsers": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "xdhlyjkly3ytp"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "klk6q3ypsnt55"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "czzkedefixpon"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "5jhyuhj8o36rz"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "ji0w2xahnzzm5"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-email-parsers",
                "tags": [
                    "automation.email.parsers"
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-automation-email-parsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "9dyqcs2o1c98x"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Parser",
                                            "x-stoplight": {
                                                "id": "x0nv6z27a588x"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParserInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.email.parsers"
                ]
            }
        },
        "/settings/automation/templates": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "nyp25e3qymanf"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "5mwihgv9tfe9j"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "b8huev5rz3r2f"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "a4wu2e4nhw7m0"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "immlv23lw4gkd"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-templates",
                "tags": [
                    "automation.templates"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-automation-templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "al43148eufsfu"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template",
                                            "x-stoplight": {
                                                "id": "dzq0zzl6p3j15"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.templates"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/automation/workflows": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "cidgtv6pr755f"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "oajvbmvvz8xji"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "0hjfk2sryltra"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "s0fb7p7fw0o9h"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "uxm60mivztfwh"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-workflows",
                "tags": [
                    "automation.workflows"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-automation-workflows",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "eaqd79mckamon"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workflow",
                                            "x-stoplight": {
                                                "id": "4lw4y8a2g5q7u"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.workflows"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/company/holidaysets": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "w2mkgh8buqnvx"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "r0z9ydmq2pk5s"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "vr5qw4m8166mr"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "owropg732gt1w"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "z5695jfvlm58s"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-company-holidaysets",
                "tags": [
                    "company.holidaysets"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-company-holidaysets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "k7s3ok2b2ehnt"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HolidaySet",
                                            "x-stoplight": {
                                                "id": "nqxa5713mi38n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HolidaySetInput"
                            }
                        }
                    }
                },
                "tags": [
                    "company.holidaysets"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/company/internallocations": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "brg97tgav0n9j"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "d4eouf0e83n0j"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "7xpxvybyctfr7"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "n96dznsatpmzb"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "sg9r04f8cutw8"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-company-inernallocations",
                "tags": [
                    "company.internallocations"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-company-inernallocations",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "ka0c5m4d0219d"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InternalLocation",
                                            "x-stoplight": {
                                                "id": "dbvyg8lv8t1fx"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalLocationInput"
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "company.internallocations"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "parameters": []
        },
        "/settings/service/labels": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "k9v8f0qersgbq"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "edj0iwz9tv6u6"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "ksac6jxvzlffn"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "qetcixahu6snp"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "u6uod76jf1s80"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-service-labels",
                "tags": [
                    "service.labels"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-service-labels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "brj5t97sfkwo9"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Label",
                                            "x-stoplight": {
                                                "id": "8xspm4laee80k"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LabelInput"
                            }
                        }
                    }
                },
                "tags": [
                    "service.labels"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/sla/agreements": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "my860xsq3olr0"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "p0muygt9smqkp"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "it4lzctmfli4o"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "swzw0l2j3fhkd"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "hna3zsif6brlg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-sla-agreements",
                "tags": [
                    "sla.agreements"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-sla-agreements",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "hksvlf91l22pt"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Agreement",
                                            "x-stoplight": {
                                                "id": "ws22gdyhjbi1a"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgreementInput"
                            }
                        }
                    }
                },
                "tags": [
                    "sla.agreements"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/sla/thresholds": {
            "get": {
                "summary": "Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "2jmb3c08p8123"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "k0llsxl6ogk49"
                                            },
                                            "items": {
                                                "x-stoplight": {
                                                    "id": "3t5io3dqg82o7"
                                                },
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "x-stoplight": {
                                                            "id": "4efvg70kahbl4"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "x-stoplight": {
                                                "id": "l5zisrr9pk1b0"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-sla-thresholds",
                "tags": [
                    "sla.thresholds"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "post": {
                "summary": "Create",
                "operationId": "post-settings-sla-thresholds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "7kqawn64i9hj3"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Threshold",
                                            "x-stoplight": {
                                                "id": "5sjkzsluouifh"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThresholdInput"
                            }
                        }
                    }
                },
                "tags": [
                    "sla.thresholds"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/user/{id}": {
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "Example 1": {
                                            "status": true,
                                            "data": [
                                                {
                                                    "id": "62c4fceba36e541d722ffc83"
                                                },
                                                {
                                                    "id": "62ca347370eb5c6c3119b813"
                                                }
                                            ],
                                            "count": 2
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User",
                                            "x-stoplight": {
                                                "id": "ye6h6t4dwgofc"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Access user",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "parameters": [],
                "operationId": "getsetting-user-id",
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "patch": {
                "summary": "Edit",
                "operationId": "patchsetting-user-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "k7725ud7d56pm"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User",
                                            "x-stoplight": {
                                                "id": "j1xmxf3kfx8m6"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserEditInput"
                            }
                        }
                    }
                },
                "description": "edit user",
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "deletesetting-user-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "981r3iljr25ib"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {}
                },
                "description": "delete user",
                "tags": [
                    "users"
                ]
            }
        },
        "/settings/udf/{id}": {
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "Example 1": {
                                            "status": true,
                                            "data": [
                                                {
                                                    "id": "62c4fceba36e541d722ffc83"
                                                },
                                                {
                                                    "id": "62ca347370eb5c6c3119b813"
                                                }
                                            ],
                                            "count": 2
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UDF",
                                            "x-stoplight": {
                                                "id": "ypyc902su0pud"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Access udf",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "parameters": [],
                "operationId": "getsetting-udf-id",
                "tags": [
                    "udfs"
                ]
            },
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "patch": {
                "summary": "Edit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "93fykg3w4zr5v"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UDF",
                                            "x-stoplight": {
                                                "id": "eqz97fb42e5y9"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UDFEditInput"
                            }
                        }
                    }
                },
                "operationId": "patchsetting-udf-id",
                "description": "edit udf",
                "tags": [
                    "udfs"
                ]
            },
            "delete": {
                "summary": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "vz8f0ykmv702l"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "requestBody": {
                    "content": {}
                },
                "operationId": "deletesetting-udf-id",
                "description": "delete udf",
                "tags": [
                    "udfs"
                ]
            }
        },
        "/settings/automation/email/domain/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "y30aws8xk32ls"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Domain",
                                            "x-stoplight": {
                                                "id": "utvdv2tamj207"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-domain-id",
                "tags": [
                    "automation.email.domains"
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-domain-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "x-stoplight": {
                                                "id": "a5qvywru1dgsq"
                                            },
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Domain",
                                            "x-stoplight": {
                                                "id": "ttyjcsrl8qny5"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainEditInput"
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "automation.email.domains"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-domain-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "etxszg2mvd2fo"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "automation.email.domains"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/automation/email/parser/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "evmlp1a64tdm8"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Parser",
                                            "x-stoplight": {
                                                "id": "7ay3y3itqnpu8"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-email-parser-id",
                "tags": [
                    "automation.email.parsers"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-automation-email-parser-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "0a6w6azdn43kl"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Parser",
                                            "x-stoplight": {
                                                "id": "c1odkpggzep2d"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParserEditInput"
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "automation.email.parsers"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-automation-email-parser-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "us0layhegwjob"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "automation.email.parsers"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/automation/template/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "13yhwobht7ju0"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template",
                                            "x-stoplight": {
                                                "id": "7sjstrp9bjkjk"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-template-id",
                "tags": [
                    "automation.templates"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-automation-template-id",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "c9imxvl1zrvhs"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template",
                                            "x-stoplight": {
                                                "id": "zgd9vx3e5p0pw"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.templates"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-automation-template-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "s061qdsa36fbm"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "automation.templates"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/automation/workflow/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "0bsp0kccr0yos"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workflow",
                                            "x-stoplight": {
                                                "id": "1cfvimfkf0y5z"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-automation-workflow-id",
                "tags": [
                    "automation.workflows"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-automation-workflow-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "65zj4zujbn33v"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Workflow",
                                            "x-stoplight": {
                                                "id": "ei9pu7x9ltnxr"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "automation.workflows"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-automation-workflow-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "owbgmcchqho24"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "automation.workflows"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/company/holidayset/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "a97jdk4t0fggt"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HolidaySet",
                                            "x-stoplight": {
                                                "id": "gdrdcnxnqzexr"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-company-holidayset-id",
                "tags": [
                    "company.holidaysets"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-company-holidayset-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "5ge3fl0qu4k3e"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/HolidaySet",
                                            "x-stoplight": {
                                                "id": "ygwl6k53bk75s"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HolidaySetEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "company.holidaysets"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-company-holidayset-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "yy5vhvpxq09lc"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {}
                },
                "tags": [
                    "company.holidaysets"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/company/internallocation/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "35v73x4c28j7t"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InternalLocation",
                                            "x-stoplight": {
                                                "id": "qzs6z4w8d8stu"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-company-internallocation-id",
                "tags": [
                    "company.internallocations"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-company-internallocation-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "1bp71u5bhgmvu"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/InternalLocation",
                                            "x-stoplight": {
                                                "id": "1xddwt6gh0yal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalLocationEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "company.internallocations"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-company-internallocation-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "agc1yvymx2ijg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company.internallocations"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/service/label/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "4z4f76532xm6x"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Label",
                                            "x-stoplight": {
                                                "id": "roy1dpyz9d5fh"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-service-label-id",
                "tags": [
                    "service.labels"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-service-label-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "rvuatv5dwx6vd"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Label",
                                            "x-stoplight": {
                                                "id": "vwl13ie5hws26"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LabelEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "service.labels"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-service-label-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "xpwefw4dvm1xg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "service.labels"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/sla/agreement/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "09ag9lrcmbdyz"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Agreement",
                                            "x-stoplight": {
                                                "id": "yerwpm5i8kux6"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-sla-agreement-id",
                "tags": [
                    "sla.agreements"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-sla-agreement-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "4hofh63j04gps"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Agreement",
                                            "x-stoplight": {
                                                "id": "9ovij7pkhggvf"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgreementEditInput"
                            }
                        }
                    }
                },
                "tags": [
                    "sla.agreements"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-sla-agreement-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "9rz41kj1g8iha"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sla.agreements"
                ],
                "security": [
                    {
                        "mkey": []
                    }
                ]
            }
        },
        "/settings/sla/threshold/{id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "ja0zas5dhrfap"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Threshold",
                                            "x-stoplight": {
                                                "id": "ze7a3huymcobt"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-settings-sla-threshold-id",
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "tags": [
                    "sla.thresholds"
                ]
            },
            "patch": {
                "summary": "Edit",
                "operationId": "patch-settings-sla-threshold-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "8muuu2sfky6b4"
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Threshold",
                                            "x-stoplight": {
                                                "id": "q92l130mpdnog"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThresholdEditInput"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "tags": [
                    "sla.thresholds"
                ]
            },
            "delete": {
                "summary": "Delete",
                "operationId": "delete-settings-sla-threshold-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "x-stoplight": {
                                                "id": "3f7ewa8ikyqey"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "mkey": []
                    }
                ],
                "tags": [
                    "sla.thresholds"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "DomainInput": {
                "title": "Domain Create Input",
                "x-stoplight": {
                    "id": "h6amlm2p97rg3"
                },
                "type": "object",
                "x-tags": [
                    "automation.email.domains"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the domain (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the domain."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the domain."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ParserInput": {
                "title": "Parser Create Input",
                "x-stoplight": {
                    "id": "f6yfq2p27cuj0"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the parser."
                    },
                    "regex": {
                        "type": "string",
                        "description": "The regular expression used to parse the email."
                    },
                    "domainId": {
                        "type": "string",
                        "description": "The ID of the domain this parser is associated with."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the parser."
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "The ID of the integration this parser is associated with."
                    }
                },
                "required": [
                    "regex",
                    "domainId"
                ],
                "x-tags": [
                    "automation.email.parsers"
                ]
            },
            "TemplateInput": {
                "title": "Template Create Input",
                "x-stoplight": {
                    "id": "d5u0x2n03cqa9"
                },
                "type": "object",
                "x-tags": [
                    "automation.templates"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the template (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the template."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the template."
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the template."
                    }
                },
                "required": [
                    "status",
                    "name",
                    "content"
                ]
            },
            "WorkflowInput": {
                "title": "Workflow Create Input",
                "x-stoplight": {
                    "id": "2wm5ydnyz6b3f"
                },
                "type": "object",
                "x-tags": [
                    "automation.workflows"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the workflow: true if active, false if inactive"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow"
                    },
                    "entity": {
                        "$ref": "#/components/schemas/UDFInput/properties/entity",
                        "description": "The entity type that the workflow operates on"
                    },
                    "action": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "description": "The type of action that triggers the workflow: 0 for create, 1 for update, 2 for delete, 3 for save"
                    },
                    "conditions": {
                        "type": "array",
                        "description": "The conditions that trigger the workflow",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The field name used in the condition"
                                },
                                "action": {
                                    "type": "string",
                                    "enum": [
                                        "eq",
                                        "eqs",
                                        "ct",
                                        "cts",
                                        "in"
                                    ],
                                    "description": "The action used in the condition: eq for equal, eqs for equal (case-sensitive), ct for contains, cts for contains (case-sensitive), in for in"
                                },
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "data"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "text"
                                            ],
                                            "description": "The data type used in the condition"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "The data value used in the condition"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "field",
                                "action",
                                "data"
                            ]
                        }
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of action to perform.",
                                    "enum": [
                                        "integration",
                                        "add",
                                        "remove",
                                        "update",
                                        "email",
                                        "notification"
                                    ]
                                }
                            },
                            "oneOf": [
                                {
                                    "title": "integration",
                                    "properties": {
                                        "type": {
                                            "const": "integration"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "The ID of the integration to execute."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "id"
                                    ]
                                },
                                {
                                    "title": "update",
                                    "properties": {
                                        "type": {
                                            "const": "update"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to update."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to set the field to."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "add",
                                    "properties": {
                                        "type": {
                                            "const": "add"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to add the value to."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to add to the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "remove",
                                    "properties": {
                                        "type": {
                                            "const": "remove"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to remove the value from."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to remove from the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "email",
                                    "properties": {
                                        "type": {
                                            "const": "email"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The email address of the recipient.",
                                            "format": "email"
                                        },
                                        "from": {
                                            "type": "string",
                                            "description": "The email address to send the email from.",
                                            "format": "email"
                                        },
                                        "template": {
                                            "type": "string",
                                            "description": "The ID of the email template to use."
                                        },
                                        "sendAt": {
                                            "type": "string",
                                            "description": "The date and time to send the email, in ISO format.",
                                            "format": "date-time"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "from",
                                        "template",
                                        "sendAt"
                                    ]
                                },
                                {
                                    "title": "notification",
                                    "properties": {
                                        "type": {
                                            "const": "notification"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The user ID of the notification recipient."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "The title of the notification."
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "The text of the notification."
                                        },
                                        "color": {
                                            "type": "string",
                                            "description": "The color of the notification icon."
                                        },
                                        "icon": {
                                            "type": "string",
                                            "description": "The icon to use for the notification."
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "The priority of the notification."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "title",
                                        "text",
                                        "color"
                                    ]
                                }
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "name",
                    "entity",
                    "action",
                    "actions"
                ]
            },
            "HolidaySetInput": {
                "title": "HolidaySet Create Input",
                "x-stoplight": {
                    "id": "lncfelr8xagwv"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "description": "The status of the holiday set.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of the holiday set.",
                        "type": "string"
                    },
                    "holidays": {
                        "description": "An array of holidays for the holiday set.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "The name of the holiday.",
                                    "type": "string"
                                },
                                "date": {
                                    "description": "The date of the holiday in UTCDateTime format.",
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "required": [
                                "name",
                                "date"
                            ]
                        }
                    }
                },
                "required": [
                    "status",
                    "name",
                    "holidays"
                ],
                "x-tags": [
                    "company.holidaysets"
                ]
            },
            "InternalLocationInput": {
                "title": "InternalLocation Create Input",
                "x-stoplight": {
                    "id": "rdktmx4027v2w"
                },
                "type": "object",
                "x-tags": [
                    "company.internallocations"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Whether the internal location is active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the internal location."
                    },
                    "address": {
                        "type": "object",
                        "description": "The address of the internal location.",
                        "required": [
                            "address1",
                            "city",
                            "state",
                            "zip"
                        ],
                        "properties": {
                            "address1": {
                                "type": "string",
                                "description": "Address line 1."
                            },
                            "address2": {
                                "type": "string",
                                "description": "Address line 2."
                            },
                            "city": {
                                "type": "string",
                                "description": "The city where the internal location is located."
                            },
                            "state": {
                                "type": "string",
                                "description": "The state where the internal location is located."
                            },
                            "zip": {
                                "type": "string",
                                "description": "The ZIP code of the internal location."
                            }
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone of the internal location."
                    },
                    "hours": {
                        "type": "object",
                        "description": "The business hours of the internal location.",
                        "properties": {
                            "sunday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "monday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "tuesday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "wednesday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "thursday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "friday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "saturday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "holidays": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            }
                        }
                    },
                    "holidaySetId": {
                        "type": "string",
                        "description": "The ID of the holiday set for the internal location."
                    }
                },
                "required": [
                    "status",
                    "name",
                    "address",
                    "timezone",
                    "hours",
                    "holidaySetId"
                ]
            },
            "LabelInput": {
                "title": "Label Create Input",
                "x-stoplight": {
                    "id": "t6brf8cpc39bs"
                },
                "type": "object",
                "x-tags": [
                    "service.labels"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Whether the label is currently active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the label."
                    },
                    "icon": {
                        "type": "string",
                        "description": "The google material icon for the label."
                    },
                    "color": {
                        "type": "string",
                        "description": "The color associated with the label in hex format.",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
                    }
                },
                "required": [
                    "name",
                    "color"
                ]
            },
            "AgreementInput": {
                "title": "Agreement Create Input",
                "x-stoplight": {
                    "id": "0u2ek5is3cvlw"
                },
                "type": "object",
                "x-tags": [
                    "sla.agreements"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Whether the SLA agreement is active or inactive"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SLA agreement"
                    },
                    "internalLocationId": {
                        "type": "string",
                        "format": "id",
                        "description": "ID of the internal location associated with the Agreement."
                    },
                    "thresholdIds": {
                        "type": "array",
                        "description": "IDs of the thresholds associated with the Agreement.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "objectives": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Objectives associated with the Agreement",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Whether the objective is active or inactive"
                                },
                                "timeframe": {
                                    "type": "integer",
                                    "description": "Timeframe for the objective"
                                },
                                "thresholds": {
                                    "type": "object",
                                    "description": "Thresholds for the objective",
                                    "patternProperties": {
                                        "^[a-f\\d]{24}$": {
                                            "type": "integer",
                                            "description": "Value of the threshold."
                                        }
                                    }
                                },
                                "conditions": {
                                    "type": "array",
                                    "description": "Conditions for the objective",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the field"
                                            },
                                            "operator": {
                                                "type": "string",
                                                "description": "Operator to be used for comparison"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Value to be compared against"
                                            }
                                        },
                                        "required": [
                                            "field",
                                            "operator",
                                            "value"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "timeframe",
                                "thresholds",
                                "conditions"
                            ]
                        }
                    }
                },
                "required": [
                    "name",
                    "internalLocationId",
                    "thresholdIds",
                    "objectives"
                ]
            },
            "UDFInput": {
                "title": "UDF Create Input",
                "x-stoplight": {
                    "id": "2x52ig23lq80o"
                },
                "type": "object",
                "x-tags": [
                    "udfs"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the UDF (active/inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the UDF, camelCase recommended. (Cannot contain spaces)",
                        "pattern": "^\\S+$"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the UDF."
                    },
                    "type": {
                        "type": "integer",
                        "description": "The type of the UDF."
                    },
                    "entity": {
                        "description": "The entity associated with the UDF.",
                        "type": "integer",
                        "oneOf": [
                            {
                                "title": "Account",
                                "const": 11
                            },
                            {
                                "title": "Allocation",
                                "const": 63
                            },
                            {
                                "title": "Article",
                                "const": 31
                            },
                            {
                                "title": "Asset",
                                "const": 81
                            },
                            {
                                "title": "AssetBundle",
                                "const": 83
                            },
                            {
                                "title": "Board",
                                "const": 21
                            },
                            {
                                "title": "Category",
                                "const": 72
                            },
                            {
                                "title": "Contact",
                                "const": 13
                            },
                            {
                                "title": "Email",
                                "const": 5
                            },
                            {
                                "title": "Event",
                                "const": 4
                            },
                            {
                                "title": "Group",
                                "const": 73
                            },
                            {
                                "title": "Invoice",
                                "const": 64
                            },
                            {
                                "title": "Label",
                                "const": 6
                            },
                            {
                                "title": "Location",
                                "const": 12
                            },
                            {
                                "title": "Note",
                                "const": 14
                            },
                            {
                                "title": "Notification",
                                "const": 3
                            },
                            {
                                "title": "Password",
                                "const": 32
                            },
                            {
                                "title": "Payment",
                                "const": 65
                            },
                            {
                                "title": "Product",
                                "const": 82
                            },
                            {
                                "title": "ProductBundle",
                                "const": 84
                            },
                            {
                                "title": "Region",
                                "const": 71
                            },
                            {
                                "title": "Service",
                                "const": 66
                            },
                            {
                                "title": "Ticket",
                                "const": 20
                            },
                            {
                                "title": "UDF",
                                "const": 2
                            },
                            {
                                "title": "User",
                                "const": 1
                            }
                        ]
                    },
                    "data": {
                        "type": "object",
                        "description": "Additional data for the UDF."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the UDF is required or not."
                    }
                },
                "required": [
                    "name",
                    "label",
                    "type",
                    "entity"
                ]
            },
            "UserInput": {
                "title": "User Create Input",
                "x-stoplight": {
                    "id": "b10wzdygqj8y3"
                },
                "type": "object",
                "x-tags": [
                    "users"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the user is active or inactive."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's phone number."
                    },
                    "name": {
                        "type": "object",
                        "description": "The user's name.",
                        "required": [
                            "first",
                            "last"
                        ],
                        "properties": {
                            "first": {
                                "type": "string",
                                "description": "The user's first name."
                            },
                            "last": {
                                "type": "string",
                                "description": "The user's last name."
                            }
                        }
                    },
                    "emails": {
                        "type": "array",
                        "description": "The user's email address.",
                        "items": {
                            "x-stoplight": {
                                "id": "0dmldsrk8nzzp"
                            },
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username."
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's password."
                    },
                    "fileId": {
                        "type": "string",
                        "description": "The ID of the user's profile picture."
                    },
                    "roleIds": {
                        "type": "array",
                        "description": "The IDs of the user's roles.",
                        "items": {
                            "type": "string",
                            "description": "The IDs of the user's roles."
                        }
                    },
                    "currentRoleId": {
                        "type": "string",
                        "description": "The ID of the user's current role."
                    },
                    "internalLocationId": {
                        "type": "string",
                        "description": "The ID of the user's internal location."
                    },
                    "title": {
                        "type": "string",
                        "description": "The ID of the user's job title."
                    },
                    "managerId": {
                        "type": "string",
                        "description": "The ID of the user's manager."
                    }
                },
                "required": [
                    "status",
                    "name",
                    "emails",
                    "username",
                    "password"
                ]
            },
            "ThresholdInput": {
                "title": "Threshold Create Input",
                "x-stoplight": {
                    "id": "jb91tq17kmrmo"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the threshold is active or inactive."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the threshold."
                    },
                    "conditions": {
                        "type": "array",
                        "description": "An array of conditions that define the threshold.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The name of the field to compare."
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "The comparison operator."
                                },
                                "value": {
                                    "description": "The value to compare against.",
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "field",
                                "operator",
                                "value"
                            ]
                        }
                    }
                },
                "required": [
                    "status",
                    "name",
                    "conditions"
                ],
                "x-tags": [
                    "sla.thresholds"
                ]
            },
            "DomainEditInput": {
                "title": "Domain Edit Input",
                "x-stoplight": {
                    "id": "twggpxnsvbevy"
                },
                "type": "object",
                "x-tags": [
                    "automation.email.domains"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the domain (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the domain."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the domain."
                    }
                }
            },
            "ParserEditInput": {
                "title": "Parser Edit Input",
                "x-stoplight": {
                    "id": "xhkkox26gfe8o"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the parser."
                    },
                    "regex": {
                        "type": "string",
                        "description": "The regular expression used to parse the email."
                    },
                    "domainId": {
                        "type": "string",
                        "description": "The ID of the domain this parser is associated with."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the parser."
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "The ID of the integration this parser is associated with."
                    }
                },
                "x-tags": [
                    "automation.email.parsers"
                ]
            },
            "TemplateEditInput": {
                "title": "Template Edit Input",
                "x-stoplight": {
                    "id": "turgny521s6qb"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the template (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the template."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the template."
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the template."
                    }
                },
                "x-tags": [
                    "automation.templates"
                ]
            },
            "WorkflowEditInput": {
                "title": "Workflow Edit Input",
                "x-stoplight": {
                    "id": "cydc6an5xwa6o"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the workflow: true if active, false if inactive"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow"
                    },
                    "entity": {
                        "$ref": "#/components/schemas/UDFInput/properties/entity",
                        "description": "The entity type that the workflow operates on"
                    },
                    "action": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "description": "The type of action that triggers the workflow: 0 for create, 1 for update, 2 for delete, 3 for save"
                    },
                    "conditions": {
                        "type": "array",
                        "description": "The conditions that trigger the workflow",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The field name used in the condition"
                                },
                                "action": {
                                    "type": "string",
                                    "enum": [
                                        "eq",
                                        "eqs",
                                        "ct",
                                        "cts",
                                        "in"
                                    ],
                                    "description": "The action used in the condition: eq for equal, eqs for equal (case-sensitive), ct for contains, cts for contains (case-sensitive), in for in"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "text"
                                            ],
                                            "description": "The data type used in the condition"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "The data value used in the condition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of action to perform.",
                                    "enum": [
                                        "integration",
                                        "add",
                                        "remove",
                                        "update",
                                        "email",
                                        "notification"
                                    ]
                                }
                            },
                            "oneOf": [
                                {
                                    "title": "integration",
                                    "properties": {
                                        "type": {
                                            "const": "integration"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "The ID of the integration to execute."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "id"
                                    ]
                                },
                                {
                                    "title": "update",
                                    "properties": {
                                        "type": {
                                            "const": "update"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to update."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to set the field to."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "add",
                                    "properties": {
                                        "type": {
                                            "const": "add"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to add the value to."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to add to the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "remove",
                                    "properties": {
                                        "type": {
                                            "const": "remove"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to remove the value from."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to remove from the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "email",
                                    "properties": {
                                        "type": {
                                            "const": "email"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The email address of the recipient.",
                                            "format": "email"
                                        },
                                        "from": {
                                            "type": "string",
                                            "description": "The email address to send the email from.",
                                            "format": "email"
                                        },
                                        "template": {
                                            "type": "string",
                                            "description": "The ID of the email template to use."
                                        },
                                        "sendAt": {
                                            "type": "string",
                                            "description": "The date and time to send the email, in ISO format.",
                                            "format": "date-time"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "from",
                                        "template",
                                        "sendAt"
                                    ]
                                },
                                {
                                    "title": "notification",
                                    "properties": {
                                        "type": {
                                            "const": "notification"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The user ID of the notification recipient."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "The title of the notification."
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "The text of the notification."
                                        },
                                        "color": {
                                            "type": "string",
                                            "description": "The color of the notification icon."
                                        },
                                        "icon": {
                                            "type": "string",
                                            "description": "The icon to use for the notification."
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "The priority of the notification."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "title",
                                        "text",
                                        "color"
                                    ]
                                }
                            ],
                            "type": "object"
                        }
                    }
                },
                "x-tags": [
                    "automation.workflows"
                ]
            },
            "HolidaySetEditInput": {
                "title": "HolidaySet Edit Input",
                "x-stoplight": {
                    "id": "l4u8vwgzfl9kp"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "description": "The status of the holiday set.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of the holiday set.",
                        "type": "string"
                    },
                    "holidays": {
                        "description": "An array of holidays for the holiday set.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "The name of the holiday.",
                                    "type": "string"
                                },
                                "date": {
                                    "description": "The date of the holiday in UTCDateTime format.",
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "required": [
                                "name",
                                "date"
                            ]
                        }
                    }
                },
                "x-tags": [
                    "company.holidaysets"
                ]
            },
            "InternalLocationEditInput": {
                "title": "InternalLocation Edit Input",
                "x-stoplight": {
                    "id": "lm0brh0ti48fd"
                },
                "type": "object",
                "x-tags": [
                    "company.internallocations"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Whether the internal location is active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the internal location."
                    },
                    "address": {
                        "type": "object",
                        "description": "The address of the internal location.",
                        "properties": {
                            "address1": {
                                "type": "string",
                                "description": "Address line 1."
                            },
                            "address2": {
                                "type": "string",
                                "description": "Address line 2."
                            },
                            "city": {
                                "type": "string",
                                "description": "The city where the internal location is located."
                            },
                            "state": {
                                "type": "string",
                                "description": "The state where the internal location is located."
                            },
                            "zip": {
                                "type": "string",
                                "description": "The ZIP code of the internal location."
                            }
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone of the internal location."
                    },
                    "hours": {
                        "type": "object",
                        "description": "The business hours of the internal location.",
                        "properties": {
                            "sunday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "monday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "tuesday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "wednesday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "thursday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "friday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "saturday": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            },
                            "holidays": {
                                "$ref": "#/definitions/dayOfWeekHours"
                            }
                        }
                    },
                    "holidaySetId": {
                        "type": "string",
                        "description": "The ID of the holiday set for the internal location."
                    }
                }
            },
            "LabelEditInput": {
                "title": "Label Edit Input",
                "x-stoplight": {
                    "id": "1l2k2vm9jkgp4"
                },
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Whether the label is currently active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the label."
                    },
                    "icon": {
                        "type": "string",
                        "description": "The google material icon for the label."
                    },
                    "color": {
                        "type": "string",
                        "description": "The color associated with the label in hex format.",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
                    }
                },
                "x-tags": [
                    "service.labels"
                ]
            },
            "AgreementEditInput": {
                "title": "Agreement Edit Input",
                "x-stoplight": {
                    "id": "wonmig76df6jo"
                },
                "type": "object",
                "x-tags": [
                    "sla.agreements"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the SLA agreement"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the SLA agreement is active or inactive"
                    },
                    "internalLocationId": {
                        "type": "string",
                        "format": "id",
                        "description": "ID of the internal location associated with the Agreement."
                    },
                    "thresholdIds": {
                        "type": "array",
                        "description": "IDs of the thresholds associated with the Agreement.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "objectives": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Objectives associated with the Agreement",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Whether the objective is active or inactive"
                                },
                                "timeframe": {
                                    "type": "integer",
                                    "description": "Timeframe for the objective"
                                },
                                "thresholds": {
                                    "type": "object",
                                    "description": "Thresholds for the objective",
                                    "patternProperties": {
                                        "^[a-f\\d]{24}$": {
                                            "type": "integer",
                                            "description": "Value of the threshold."
                                        }
                                    }
                                },
                                "conditions": {
                                    "type": "array",
                                    "description": "Conditions for the objective",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the field"
                                            },
                                            "operator": {
                                                "type": "string",
                                                "description": "Operator to be used for comparison"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Value to be compared against"
                                            }
                                        },
                                        "required": [
                                            "field",
                                            "operator",
                                            "value"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "timeframe",
                                "thresholds",
                                "conditions"
                            ]
                        }
                    }
                }
            },
            "UDFEditInput": {
                "title": "UDF Edit Input",
                "x-stoplight": {
                    "id": "qvour95agqmuq"
                },
                "type": "object",
                "x-tags": [
                    "udfs"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "The status of the UDF (active/inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the UDF, camelCase recommended. (Cannot contain spaces)",
                        "pattern": "^\\S+$"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the UDF."
                    },
                    "type": {
                        "type": "integer",
                        "description": "The type of the UDF."
                    },
                    "entity": {
                        "$ref": "#/components/schemas/UDFInput/properties/entity",
                        "description": "The entity associated with the UDF."
                    },
                    "data": {
                        "type": "object",
                        "description": "Additional data for the UDF."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the UDF is required or not."
                    }
                }
            },
            "UserEditInput": {
                "title": "User Edit Input",
                "x-stoplight": {
                    "id": "77puqauimzrnh"
                },
                "type": "object",
                "x-tags": [
                    "users"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the user is active or inactive."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's phone number."
                    },
                    "name": {
                        "type": "object",
                        "description": "The user's name.",
                        "properties": {
                            "first": {
                                "type": "string",
                                "description": "The user's first name."
                            },
                            "last": {
                                "type": "string",
                                "description": "The user's last name."
                            }
                        }
                    },
                    "emails": {
                        "type": "array",
                        "description": "The user's email address.",
                        "items": {
                            "x-stoplight": {
                                "id": "rg7cx8j3k7eze"
                            },
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username."
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's password."
                    },
                    "fileId": {
                        "type": "string",
                        "description": "The ID of the user's profile picture."
                    },
                    "roleIds": {
                        "type": "array",
                        "description": "The IDs of the user's roles.",
                        "items": {
                            "type": "string",
                            "description": "The IDs of the user's roles."
                        }
                    },
                    "currentRoleId": {
                        "type": "string",
                        "description": "The ID of the user's current role."
                    },
                    "internalLocationId": {
                        "type": "string",
                        "description": "The ID of the user's internal location."
                    },
                    "title": {
                        "type": "string",
                        "description": "The ID of the user's job title."
                    },
                    "managerId": {
                        "type": "string",
                        "description": "The ID of the user's manager."
                    }
                }
            },
            "ThresholdEditInput": {
                "title": "Threshold Edit Input",
                "x-stoplight": {
                    "id": "i339gga45duc5"
                },
                "type": "object",
                "x-tags": [
                    "sla.thresholds"
                ],
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the threshold is active or inactive."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the threshold."
                    },
                    "conditions": {
                        "type": "array",
                        "description": "An array of conditions that define the threshold.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The name of the field to compare."
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "The comparison operator."
                                },
                                "value": {
                                    "description": "The value to compare against.",
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "field",
                                "operator",
                                "value"
                            ]
                        }
                    }
                }
            },
            "Domain": {
                "x-stoplight": {
                    "id": "y05n647lm3kiy"
                },
                "title": "Domain",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The ID of the domain."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "The status of the domain (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the domain."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the domain."
                    },
                    "authenticated": {
                        "type": "boolean",
                        "description": "Indicates if the domain is authenticated."
                    },
                    "dns": {
                        "type": "object",
                        "description": "The DNS settings for the domain.",
                        "required": [
                            "mail_cname",
                            "dkim1",
                            "dkim2"
                        ],
                        "properties": {
                            "mail_cname": {
                                "type": "object",
                                "description": "The DNS settings for the mail CNAME.",
                                "required": [
                                    "valid",
                                    "hostname",
                                    "value"
                                ],
                                "properties": {
                                    "valid": {
                                        "type": "boolean",
                                        "description": "Indicates if the mail CNAME is valid."
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "description": "The hostname for the mail CNAME."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "The value for the mail CNAME."
                                    }
                                }
                            },
                            "dkim1": {
                                "type": "object",
                                "description": "The DNS settings for DKIM 1.",
                                "required": [
                                    "valid",
                                    "hostname",
                                    "value"
                                ],
                                "properties": {
                                    "valid": {
                                        "type": "boolean",
                                        "description": "Indicates if DKIM 1 is valid."
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "description": "The hostname for DKIM 1."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "The value for DKIM 1."
                                    }
                                }
                            },
                            "dkim2": {
                                "type": "object",
                                "description": "The DNS settings for DKIM 2.",
                                "required": [
                                    "valid",
                                    "hostname",
                                    "value"
                                ],
                                "properties": {
                                    "valid": {
                                        "type": "boolean",
                                        "description": "Indicates if DKIM 2 is valid."
                                    },
                                    "hostname": {
                                        "type": "string",
                                        "description": "The hostname for DKIM 2."
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "The value for DKIM 2."
                                    }
                                }
                            }
                        }
                    },
                    "_sendGrid": {
                        "type": "object",
                        "description": "The SendGrid settings for the domain.",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The ID of the domain in SendGrid."
                            }
                        }
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "authenticated",
                    "dns",
                    "_sendGrid"
                ]
            },
            "Parser": {
                "x-stoplight": {
                    "id": "x0nv6z27a588x"
                },
                "title": "Parser",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the parser."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "The status of the parser."
                    },
                    "regex": {
                        "type": "string",
                        "description": "The regular expression used to parse the email."
                    },
                    "domainId": {
                        "type": "string",
                        "description": "The ID of the domain this parser is associated with."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the parser."
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "The ID of the integration this parser is associated with."
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "regex",
                    "domainId"
                ]
            },
            "Template": {
                "x-stoplight": {
                    "id": "dzq0zzl6p3j15"
                },
                "title": "Template",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The ID of the template."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "The status of the template (active or inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the template."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the template."
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the template."
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "description",
                    "content"
                ]
            },
            "Workflow": {
                "x-stoplight": {
                    "id": "4lw4y8a2g5q7u"
                },
                "title": "Workflow",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the workflow"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "The status of the workflow: true if active, false if inactive"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the workflow"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the workflow"
                    },
                    "entity": {
                        "$ref": "#/components/schemas/UDFInput/properties/entity",
                        "description": "The entity type that the workflow operates on"
                    },
                    "action": {
                        "type": "integer",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "description": "The type of action that triggers the workflow: 0 for create, 1 for update, 2 for delete, 3 for save"
                    },
                    "conditions": {
                        "type": "array",
                        "description": "The conditions that trigger the workflow",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The field name used in the condition"
                                },
                                "action": {
                                    "type": "string",
                                    "enum": [
                                        "eq",
                                        "eqs",
                                        "ct",
                                        "cts",
                                        "in"
                                    ],
                                    "description": "The action used in the condition: eq for equal, eqs for equal (case-sensitive), ct for contains, cts for contains (case-sensitive), in for in"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "text"
                                            ],
                                            "description": "The data type used in the condition"
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "The data value used in the condition"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "field",
                                "action",
                                "data"
                            ]
                        }
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of action to perform.",
                                    "enum": [
                                        "integration",
                                        "add",
                                        "remove",
                                        "update",
                                        "email",
                                        "notification"
                                    ]
                                }
                            },
                            "oneOf": [
                                {
                                    "title": "integration",
                                    "properties": {
                                        "type": {
                                            "const": "integration"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "The ID of the integration to execute."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "id"
                                    ]
                                },
                                {
                                    "title": "update",
                                    "properties": {
                                        "type": {
                                            "const": "update"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to update."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to set the field to."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "add",
                                    "properties": {
                                        "type": {
                                            "const": "add"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to add the value to."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to add to the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "remove",
                                    "properties": {
                                        "type": {
                                            "const": "remove"
                                        },
                                        "field": {
                                            "type": "string",
                                            "description": "The name of the field to remove the value from."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "The value to remove from the field."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "field",
                                        "value"
                                    ]
                                },
                                {
                                    "title": "email",
                                    "properties": {
                                        "type": {
                                            "const": "email"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The email address of the recipient.",
                                            "format": "email"
                                        },
                                        "from": {
                                            "type": "string",
                                            "description": "The email address to send the email from.",
                                            "format": "email"
                                        },
                                        "templateId": {
                                            "type": "string",
                                            "description": "The ID of the email template to use.",
                                            "x-stoplight": {
                                                "id": "hbxsyflyt3cfy"
                                            }
                                        },
                                        "sendAt": {
                                            "type": "string",
                                            "description": "The date and time to send the email, in ISO format.",
                                            "format": "date-time"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "from",
                                        "templateId",
                                        "sendAt"
                                    ]
                                },
                                {
                                    "title": "notification",
                                    "properties": {
                                        "type": {
                                            "const": "notification"
                                        },
                                        "to": {
                                            "type": "string",
                                            "description": "The user ID of the notification recipient."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "The title of the notification."
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "The text of the notification."
                                        },
                                        "color": {
                                            "type": "string",
                                            "description": "The color of the notification icon."
                                        },
                                        "icon": {
                                            "type": "string",
                                            "description": "The icon to use for the notification."
                                        },
                                        "priority": {
                                            "type": "string",
                                            "description": "The priority of the notification."
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "to",
                                        "title",
                                        "text",
                                        "color"
                                    ]
                                }
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "entity",
                    "action"
                ]
            },
            "HolidaySet": {
                "x-stoplight": {
                    "id": "nqxa5713mi38n"
                },
                "title": "HolidaySet",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the workflow"
                    },
                    "status": {
                        "description": "The status of the holiday set.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of the holiday set.",
                        "type": "string"
                    },
                    "holidays": {
                        "description": "An array of holidays for the holiday set.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "The name of the holiday.",
                                    "type": "string"
                                },
                                "date": {
                                    "description": "The date of the holiday in UTCDateTime format.",
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "required": [
                                "name",
                                "date"
                            ]
                        }
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "holidays"
                ]
            },
            "InternalLocation": {
                "x-stoplight": {
                    "id": "dbvyg8lv8t1fx"
                },
                "title": "InternalLocation",
                "type": "object",
                "definitions": {
                    "dayOfWeekHours": {
                        "type": "object",
                        "description": "The business hours for a day of the week.",
                        "properties": {
                            "startTime": {
                                "type": "string",
                                "description": "The start time of the business hours in the format HH:MM."
                            },
                            "endTime": {
                                "type": "string",
                                "description": "The end time of the business hours in the format HH:MM."
                            }
                        }
                    }
                },
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The ID of the internal location."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the internal location is active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the internal location."
                    },
                    "address": {
                        "type": "object",
                        "description": "The address of the internal location.",
                        "required": [
                            "address1",
                            "city",
                            "state",
                            "zip"
                        ],
                        "properties": {
                            "address1": {
                                "type": "string",
                                "description": "Address line 1."
                            },
                            "address2": {
                                "type": "string",
                                "description": "Address line 2."
                            },
                            "city": {
                                "type": "string",
                                "description": "The city where the internal location is located."
                            },
                            "state": {
                                "type": "string",
                                "description": "The state where the internal location is located."
                            },
                            "zip": {
                                "type": "string",
                                "description": "The ZIP code of the internal location."
                            }
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone of the internal location."
                    },
                    "hours": {
                        "type": "object",
                        "description": "The business hours of the internal location.",
                        "properties": {
                            "sunday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "monday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "tuesday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "wednesday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "thursday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "friday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "saturday": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            },
                            "holidays": {
                                "$ref": "#/components/schemas/InternalLocation/definitions/dayOfWeekHours"
                            }
                        }
                    },
                    "holidaySetId": {
                        "type": "string",
                        "description": "The ID of the holiday set for the internal location."
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "address",
                    "timezone",
                    "hours",
                    "holidaySetId"
                ]
            },
            "Agreement": {
                "x-stoplight": {
                    "id": "ws22gdyhjbi1a"
                },
                "title": "SLA\\Agreement",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "id",
                        "description": "ID of the Agreement."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the SLA agreement is active or inactive"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SLA agreement"
                    },
                    "internalLocationId": {
                        "type": "string",
                        "format": "id",
                        "description": "ID of the internal location associated with the Agreement."
                    },
                    "thresholdIds": {
                        "type": "array",
                        "description": "IDs of the thresholds associated with the Agreement.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "objectives": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Objectives associated with the Agreement",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Whether the objective is active or inactive"
                                },
                                "timeframe": {
                                    "type": "integer",
                                    "description": "Timeframe for the objective"
                                },
                                "thresholds": {
                                    "type": "object",
                                    "description": "Thresholds for the objective. Each key is an id from the thresholdIds array.",
                                    "patternProperties": {
                                        "^[a-f\\d]{24}$": {
                                            "type": "integer",
                                            "description": "Value of the threshold."
                                        }
                                    }
                                },
                                "conditions": {
                                    "type": "array",
                                    "description": "Conditions for the objective",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the field"
                                            },
                                            "operator": {
                                                "type": "string",
                                                "enum": [
                                                    "eq",
                                                    "eqs",
                                                    "ct",
                                                    "cts",
                                                    "in"
                                                ],
                                                "description": "The operator used in the condition: eq for equal, eqs for equal (case-sensitive), ct for contains, cts for contains (case-sensitive), in for in"
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Value to be compared against"
                                            }
                                        },
                                        "required": [
                                            "field",
                                            "operator",
                                            "value"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "timeframe",
                                "thresholds",
                                "conditions"
                            ]
                        }
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "internalLocationId",
                    "thresholdIds",
                    "objectives"
                ]
            },
            "Threshold": {
                "x-stoplight": {
                    "id": "5sjkzsluouifh"
                },
                "title": "Threshold",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier of the threshold."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the threshold is active or inactive."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the threshold."
                    },
                    "conditions": {
                        "type": "array",
                        "description": "An array of conditions that define the threshold.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "The name of the field to compare."
                                },
                                "operator": {
                                    "type": "string",
                                    "description": "The comparison operator."
                                },
                                "value": {
                                    "description": "The value to compare against.",
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "boolean"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "field",
                                "operator",
                                "value"
                            ]
                        }
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "conditions"
                ]
            },
            "Label": {
                "x-stoplight": {
                    "id": "8xspm4laee80k"
                },
                "title": "Label",
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique identifier for the label."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the label is currently active or not."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the label."
                    },
                    "icon": {
                        "type": "string",
                        "description": "The google material icon for the label."
                    },
                    "color": {
                        "type": "string",
                        "description": "The color associated with the label in hex format.",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "color"
                ]
            },
            "UDF": {
                "x-stoplight": {
                    "id": "s5wyzlqkbopdw"
                },
                "title": "UDF",
                "type": "object",
                "description": "A model class representing a user-defined field.",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The ID of the UDF."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "The status of the UDF (active/inactive)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the UDF, camelCase recommended. (Cannot contain spaces)",
                        "pattern": "^\\S+$"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the UDF."
                    },
                    "type": {
                        "type": "integer",
                        "description": "The type of the UDF."
                    },
                    "entity": {
                        "$ref": "#/components/schemas/UDFInput/properties/entity",
                        "description": "The entity associated with the UDF."
                    },
                    "data": {
                        "type": "object",
                        "description": "Additional data for the UDF."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the UDF is required or not."
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "label",
                    "type",
                    "entity",
                    "required"
                ]
            },
            "User": {
                "x-stoplight": {
                    "id": "1gvncsnfxbop8"
                },
                "title": "User",
                "type": "object",
                "description": "A user in the system.",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "The unique ID of the user."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Indicates whether the user is active or inactive."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's phone number."
                    },
                    "name": {
                        "type": "object",
                        "description": "The user's name.",
                        "required": [
                            "first",
                            "last"
                        ],
                        "properties": {
                            "first": {
                                "type": "string",
                                "description": "The user's first name."
                            },
                            "last": {
                                "type": "string",
                                "description": "The user's last name."
                            }
                        }
                    },
                    "emails": {
                        "type": "array",
                        "description": "The user's email address.",
                        "items": {
                            "x-stoplight": {
                                "id": "ghds17yuzxwof"
                            },
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "username": {
                        "type": "string",
                        "description": "The user's username."
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's password."
                    },
                    "fileId": {
                        "type": "string",
                        "description": "The ID of the user's profile picture."
                    },
                    "roleIds": {
                        "type": "array",
                        "description": "The IDs of the user's roles.",
                        "items": {
                            "type": "string",
                            "description": "The IDs of the user's roles."
                        }
                    },
                    "currentRoleId": {
                        "type": "string",
                        "description": "The ID of the user's current role."
                    },
                    "internalLocationId": {
                        "type": "string",
                        "description": "The ID of the user's internal location."
                    },
                    "title": {
                        "type": "string",
                        "description": "The ID of the user's job title."
                    },
                    "managerId": {
                        "type": "string",
                        "description": "The ID of the user's manager."
                    }
                },
                "required": [
                    "_id",
                    "status",
                    "name",
                    "emails",
                    "username",
                    "password"
                ]
            }
        },
        "parameters": {
            "include": {
                "name": "include",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "example": "name,status"
                },
                "description": "Comma separated value of the name of fields to include in the search request"
            }
        },
        "securitySchemes": {
            "mkey": {
                "name": "mkey",
                "type": "apiKey",
                "in": "header",
                "description": ""
            }
        }
    },
    "x-internal": false,
    "tags": [
        {
            "name": "automation.email.domains"
        },
        {
            "name": "automation.email.parsers"
        },
        {
            "name": "automation.templates"
        },
        {
            "name": "automation.workflows"
        },
        {
            "name": "company.holidaysets"
        },
        {
            "name": "company.internallocations"
        },
        {
            "name": "roles"
        },
        {
            "name": "service.labels"
        },
        {
            "name": "sla.agreements"
        },
        {
            "name": "sla.thresholds"
        },
        {
            "name": "udfs"
        },
        {
            "name": "users"
        }
    ]
}